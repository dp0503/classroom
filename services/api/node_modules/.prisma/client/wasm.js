
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClassScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  teacherId: 'teacherId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClassEnrollmentScalarFieldEnum = {
  id: 'id',
  classId: 'classId',
  userId: 'userId',
  roleInClass: 'roleInClass'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  classId: 'classId',
  title: 'title',
  description: 'description',
  category: 'category',
  s3Key: 's3Key',
  createdById: 'createdById',
  createdAt: 'createdAt'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  classId: 'classId',
  studentId: 'studentId',
  date: 'date',
  method: 'method'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  STUDENT: 'STUDENT',
  TEACHER: 'TEACHER',
  ADMIN: 'ADMIN'
};

exports.ClassRole = exports.$Enums.ClassRole = {
  STUDENT: 'STUDENT',
  TEACHING_ASSISTANT: 'TEACHING_ASSISTANT'
};

exports.MaterialCategory = exports.$Enums.MaterialCategory = {
  ASSIGNMENT: 'ASSIGNMENT',
  QUIZ: 'QUIZ',
  READING: 'READING',
  RESOURCE: 'RESOURCE'
};

exports.AttendanceMethod = exports.$Enums.AttendanceMethod = {
  FACE_RECOGNITION: 'FACE_RECOGNITION',
  MANUAL: 'MANUAL',
  ID_CHECKIN: 'ID_CHECKIN'
};

exports.Prisma.ModelName = {
  User: 'User',
  Class: 'Class',
  ClassEnrollment: 'ClassEnrollment',
  Material: 'Material',
  Attendance: 'Attendance'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\vs code projects\\classroom\\services\\api\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\vs code projects\\classroom\\services\\api\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma schema for class-specific isolation and RBAC\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id               String            @id @default(uuid())\n  email            String            @unique\n  password         String\n  name             String\n  role             Role\n  classes          ClassEnrollment[]\n  teachingClasses  Class[]           @relation(\"TeacherClasses\")\n  createdMaterials Material[]        @relation(\"UserCreatedMaterials\")\n  attendances      Attendance[]      @relation(\"UserAttendance\")\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n}\n\nmodel Class {\n  id          String            @id @default(uuid())\n  name        String\n  code        String            @unique\n  teacherId   String\n  teacher     User              @relation(\"TeacherClasses\", fields: [teacherId], references: [id])\n  enrollments ClassEnrollment[]\n  materials   Material[]\n  attendance  Attendance[]\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n}\n\nmodel ClassEnrollment {\n  id          String    @id @default(uuid())\n  classId     String\n  userId      String\n  roleInClass ClassRole\n  class       Class     @relation(fields: [classId], references: [id])\n  user        User      @relation(fields: [userId], references: [id])\n\n  @@unique([classId, userId])\n}\n\nmodel Material {\n  id          String           @id @default(uuid())\n  classId     String\n  title       String\n  description String?\n  category    MaterialCategory\n  s3Key       String\n  createdById String\n  class       Class            @relation(fields: [classId], references: [id])\n  creator     User             @relation(\"UserCreatedMaterials\", fields: [createdById], references: [id])\n  createdAt   DateTime         @default(now())\n}\n\nmodel Attendance {\n  id        String           @id @default(uuid())\n  classId   String\n  studentId String\n  date      DateTime\n  method    AttendanceMethod\n  class     Class            @relation(fields: [classId], references: [id])\n  student   User             @relation(\"UserAttendance\", fields: [studentId], references: [id])\n\n  @@unique([classId, studentId, date])\n}\n\nenum Role {\n  STUDENT\n  TEACHER\n  ADMIN\n}\n\nenum ClassRole {\n  STUDENT\n  TEACHING_ASSISTANT\n}\n\nenum MaterialCategory {\n  ASSIGNMENT\n  QUIZ\n  READING\n  RESOURCE\n}\n\nenum AttendanceMethod {\n  FACE_RECOGNITION\n  MANUAL\n  ID_CHECKIN\n}\n",
  "inlineSchemaHash": "dfa9fdd9283617243d85e005232e223b1c0f70e4186355d3bf55dad98dd9ff1c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"classes\",\"kind\":\"object\",\"type\":\"ClassEnrollment\",\"relationName\":\"ClassEnrollmentToUser\"},{\"name\":\"teachingClasses\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"TeacherClasses\"},{\"name\":\"createdMaterials\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"UserCreatedMaterials\"},{\"name\":\"attendances\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"UserAttendance\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Class\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teacherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teacher\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeacherClasses\"},{\"name\":\"enrollments\",\"kind\":\"object\",\"type\":\"ClassEnrollment\",\"relationName\":\"ClassToClassEnrollment\"},{\"name\":\"materials\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"ClassToMaterial\"},{\"name\":\"attendance\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToClass\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ClassEnrollment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleInClass\",\"kind\":\"enum\",\"type\":\"ClassRole\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"ClassToClassEnrollment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClassEnrollmentToUser\"}],\"dbName\":null},\"Material\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"MaterialCategory\"},{\"name\":\"s3Key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"ClassToMaterial\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserCreatedMaterials\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"AttendanceMethod\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"AttendanceToClass\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAttendance\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

